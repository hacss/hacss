const { color, lookup, mapArgs } = require("./utils.js");

module.exports = {
  Animdel: a => `animation-delay: ${a}`,
  Animdir: mapArgs(
    [
      lookup({
        a: "alternate",
        ar: "alternate-reverse",
        n: "normal",
        r: "reverse",
      }),
    ],
    a => `animation-direction: ${a}`,
  ),
  Animdur: a => `animation-duration: ${a}`,
  Animfm: mapArgs(
    [lookup({ b: "backwards", bo: "both", f: "forwards", n: "none" })],
    a => `animation-fill-mode: ${a}`,
  ),
  Animic: mapArgs(
    [lookup({ i: "infinite" })],
    a => `animation-iteration-count: ${a}`,
  ),
  Animn: mapArgs([lookup({ n: "none" })], a => `animation-name: ${a}`),
  Animps: mapArgs(
    [lookup({ p: "paused", r: "running" })],
    a => `animation-play-state: ${a}`,
  ),
  Animtf: mapArgs(
    [
      lookup({
        e: "ease",
        ei: "ease-in",
        eo: "ease-out",
        eio: "ease-in-out",
        l: "linear",
        se: "step-end",
        ss: "step-start",
      }),
    ],
    a => `animation-timing-function: ${a}`,
  ),
  Ap: mapArgs([lookup({ a: "auto", n: "none" })], a => `appearance: ${a}`),
  Bd: mapArgs([lookup({ 0: 0, n: "none" })], a => `border: ${a}`),
  Bdc: mapArgs([color], a => `border-color: ${a}`),
  Bdtc: mapArgs([color], a => `border-top-color: ${a}`),
  Bdendc: mapArgs([color], a => `border-__END__-color: ${a}`),
  Bdbc: mapArgs([color], a => `border-bottom-color: ${a}`),
  Bdstartc: mapArgs([color], a => `border-__START__-color: ${a}`),
  Bdsp: mapArgs(
    [lookup({ i: "inherit" })],
    (a, b) => `border-spacing: ${a} ${b}`,
  ),
  Bds: mapArgs(
    [
      lookup({
        d: "dotted",
        da: "dashed",
        do: "double",
        g: "groove",
        h: "hidden",
        i: "inset",
        n: "none",
        o: "outset",
        r: "ridge",
        s: "solid",
      }),
    ],
    a => `border-style: ${a}`,
  ),
  Bdts: mapArgs(
    [
      lookup({
        d: "dotted",
        da: "dashed",
        do: "double",
        g: "groove",
        h: "hidden",
        i: "inset",
        n: "none",
        o: "outset",
        r: "ridge",
        s: "solid",
      }),
    ],
    a => `border-top-style: ${a}`,
  ),
  Bdends: mapArgs(
    [
      lookup({
        d: "dotted",
        da: "dashed",
        do: "double",
        g: "groove",
        h: "hidden",
        i: "inset",
        n: "none",
        o: "outset",
        r: "ridge",
        s: "solid",
      }),
    ],
    a => `border-__END__-style: ${a}`,
  ),
  Bdbs: mapArgs(
    [
      lookup({
        d: "dotted",
        da: "dashed",
        do: "double",
        g: "groove",
        h: "hidden",
        i: "inset",
        n: "none",
        o: "outset",
        r: "ridge",
        s: "solid",
      }),
    ],
    a => `border-bottom-style: ${a}`,
  ),
  Bdstarts: mapArgs(
    [
      lookup({
        d: "dotted",
        da: "dashed",
        do: "double",
        g: "groove",
        h: "hidden",
        i: "inset",
        n: "none",
        o: "outset",
        r: "ridge",
        s: "solid",
      }),
    ],
    a => `border-__START__-style: ${a}`,
  ),
  Bdw: mapArgs(
    [lookup({ m: "medium", t: "thin", th: "thick" })],
    a => `border-width: ${a}`,
  ),
  Bdtw: mapArgs(
    [lookup({ m: "medium", t: "thin", th: "thick" })],
    a => `border-top-width: ${a}`,
  ),
  Bdendw: mapArgs(
    [lookup({ m: "medium", t: "thin", th: "thick" })],
    a => `border-__END__-width: ${a}`,
  ),
  Bdbw: mapArgs(
    [lookup({ m: "medium", t: "thin", th: "thick" })],
    a => `border-bottom-width: ${a}`,
  ),
  Bdstartw: mapArgs(
    [lookup({ m: "medium", t: "thin", th: "thick" })],
    a => `border-__START__-width: ${a}`,
  ),
  Bdrs: a => `border-radius: ${a}`,
  Bdrstend: a => `border-top-__END__-radius: ${a}`,
  Bdrsbend: a => `border-bottom-__END__-radius: ${a}`,
  Bdrsbstart: a => `border-bottom-__START__-radius: ${a}`,
  Bdrststart: a => `border-top-__START__-radius: ${a}`,
  Bg: mapArgs(
    [lookup({ n: "none", t: "transparent" })],
    a => `background: ${a}`,
  ),
  Bgi: mapArgs([lookup({ n: "none" })], a => `background-image: ${a}`),
  Bgc: mapArgs([color], a => `background-color: ${a}`),
  Bgcp: mapArgs(
    [lookup({ bb: "border-box", cb: "content-box", pb: "padding-box" })],
    a => `background-clip: ${a}`,
  ),
  Bgo: mapArgs(
    [lookup({ bb: "border-box", cb: "content-box", pb: "padding-box" })],
    a => `background-origin: ${a}`,
  ),
  Bgz: mapArgs(
    [lookup({ a: "auto", ct: "contain", cv: "cover" })],
    a => `background-size: ${a}`,
  ),
  Bga: mapArgs(
    [lookup({ f: "fixed", l: "local", s: "scroll" })],
    a => `background-attachment: ${a}`,
  ),
  Bgp: mapArgs(
    [
      lookup({
        start_t: "__START__ 0",
        end_t: "__END__ 0",
        start_b: "__START__ 100%",
        end_b: "__END__ 100%",
        start_c: "__START__ center",
        end_c: "__END__ center",
        c_b: "center 100%",
        c_t: "center 0",
        c: "center",
      }),
    ],
    (a, b) => `background-position: ${a} ${b}`,
  ),
  Bgpx: mapArgs(
    [lookup({ start: "__START__", end: "__END__", c: "50%" })],
    a => `background-position-x: ${a}`,
  ),
  Bgpy: mapArgs(
    [lookup({ t: "0", b: "100%", c: "50%" })],
    a => `background-position-y: ${a}`,
  ),
  Bgr: mapArgs(
    [
      lookup({
        nr: "no-repeat",
        rx: "repeat-x",
        ry: "repeat-y",
        r: "repeat",
        s: "space",
        ro: "round",
      }),
    ],
    a => `background-repeat: ${a}`,
  ),
  Bdcl: mapArgs(
    [lookup({ c: "collapse", s: "separate" })],
    a => `border-collapse: ${a}`,
  ),
  Bxz: mapArgs(
    [lookup({ cb: "content-box", pb: "padding-box", bb: "border-box" })],
    a => `box-sizing: ${a}`,
  ),
  Bxsh: mapArgs([lookup({ n: "none" })], a => `box-shadow: ${a}`),
  Cl: mapArgs(
    [lookup({ n: "none", b: "both", start: "__START__", end: "__END__" })],
    a => `clear: ${a}`,
  ),
  C: mapArgs([color], a => `color: ${a}`),
  Ctn: mapArgs(
    [
      lookup({
        n: "none",
        st: "strict",
        c: "content",
        z: "size",
        l: "layout",
        s: "style",
        p: "paint",
      }),
    ],
    a => `contain: ${a}`,
  ),
  Cnt: mapArgs(
    [
      lookup({
        n: "none",
        nor: "normal",
        oq: "open-quote",
        cq: "close-quote",
        noq: "no-open-quote",
        ncq: "no-close-quote",
      }),
    ],
    a => `content: ${a}`,
  ),
  Cur: mapArgs(
    [
      lookup({
        a: "auto",
        as: "all-scroll",
        c: "cell",
        cr: "col-resize",
        co: "copy",
        cro: "crosshair",
        d: "default",
        er: "e-resize",
        ewr: "ew-resize",
        g: "grab",
        gr: "grabbing",
        h: "help",
        m: "move",
        n: "none",
        nd: "no-drop",
        na: "not-allowed",
        nr: "n-resize",
        ner: "ne-resize",
        neswr: "nesw-resize",
        nwser: "nwse-resize",
        nsr: "ns-resize",
        nwr: "nw-resize",
        p: "pointer",
        pr: "progress",
        rr: "row-resize",
        sr: "s-resize",
        ser: "se-resize",
        swr: "sw-resize",
        t: "text",
        vt: "vertical-text",
        w: "wait",
        wr: "w-resize",
        zi: "zoom-in",
        zo: "zoom-out",
      }),
    ],
    a => `cursor: ${a}`,
  ),
  D: mapArgs(
    [
      lookup({
        n: "none",
        b: "block",
        f: "flex",
        if: "inline-flex",
        i: "inline",
        ib: "inline-block",
        tb: "table",
        tbr: "table-row",
        tbc: "table-cell",
        li: "list-item",
        ri: "run-in",
        cp: "compact",
        itb: "inline-table",
        tbcl: "table-column",
        tbclg: "table-column-group",
        tbhg: "table-header-group",
        tbfg: "table-footer-group",
        tbrg: "table-row-group",
      }),
    ],
    a => `display: ${a}`,
  ),
  Fil: mapArgs([lookup({ n: "none" })], a => `filter: ${a}`),
  Blur: a => `filter: blur(${a})`,
  Brightness: a => `filter: brightness(${a})`,
  Contrast: a => `filter: contrast(${a})`,
  Dropshadow: a => `filter: drop-shadow(${a})`,
  Grayscale: a => `filter: grayscale(${a})`,
  HueRotate: a => `filter: hue-rotate(${a})`,
  Invert: a => `filter: invert(${a})`,
  Opacity: a => `filter: opacity(${a})`,
  Saturate: a => `filter: saturate(${a})`,
  Sepia: a => `filter: sepia(${a})`,
  Fx: mapArgs([lookup({ a: "auto", n: "none" })], a => `flex: ${a}`),
  Fxg: a => `flex-grow: ${a}`,
  Fxs: a => `flex-shrink: ${a}`,
  Fxb: mapArgs([lookup({ a: "auto", n: "none" })], a => `flex-basis: ${a}`),
  As: mapArgs(
    [
      lookup({
        a: "auto",
        fs: "flex-start",
        fe: "flex-end",
        c: "center",
        b: "baseline",
        st: "stretch",
      }),
    ],
    a => `align-self: ${a}`,
  ),
  Fxd: mapArgs(
    [
      lookup({
        r: "row",
        rr: "row-reverse",
        c: "column",
        cr: "column-reverse",
      }),
    ],
    a => `flex-direction: ${a}`,
  ),
  Fxf: mapArgs(
    [
      lookup({
        r: "row",
        rr: "row-reverse",
        c: "column",
        cr: "column-reverse",
        nw: "nowrap",
        w: "wrap",
        wr: "wrap-reverse",
      }),
    ],
    a => `flex-flow: ${a}`,
  ),
  Ai: mapArgs(
    [
      lookup({
        fs: "flex-start",
        fe: "flex-end",
        c: "center",
        b: "baseline",
        st: "stretch",
      }),
    ],
    a => `align-items: ${a}`,
  ),
  Ac: mapArgs(
    [
      lookup({
        fs: "flex-start",
        fe: "flex-end",
        c: "center",
        sb: "space-between",
        sa: "space-around",
        st: "stretch",
      }),
    ],
    a => `align-content: ${a}`,
  ),
  Or: a => `order: ${a}`,
  Jc: mapArgs(
    [
      lookup({
        fs: "flex-start",
        fe: "flex-end",
        c: "center",
        sb: "space-between",
        sa: "space-around",
        se: "space-evenly",
        s: "stretch",
      }),
    ],
    a => `justify-content: ${a}`,
  ),
  Fxw: mapArgs(
    [lookup({ nw: "nowrap", w: "wrap", wr: "wrap-reverse" })],
    a => `flex-wrap: ${a}`,
  ),
  Fl: mapArgs(
    [lookup({ n: "none", start: "__START__", end: "__END__" })],
    a => `float: ${a}`,
  ),
  Ff: mapArgs(
    [
      lookup({
        c: '"Monotype Corsiva", "Comic Sans MS", cursive',
        f: "Capitals, Impact, fantasy",
        m: 'Monaco, "Courier New", monospace',
        s: 'Georgia, "Times New Roman", serif',
        ss: "Helvetica, Arial, sans-serif",
      }),
    ],
    a => `font-family: ${a}`,
  ),
  Fw: mapArgs(
    [
      lookup({
        100: "100",
        200: "200",
        300: "300",
        400: "400",
        500: "500",
        600: "600",
        700: "700",
        800: "800",
        900: "900",
        b: "bold",
        br: "bolder",
        lr: "lighter",
        n: "normal",
      }),
    ],
    a => `font-weight: ${a}`,
  ),
  Fz: a => `font-size: ${a}`,
  Fs: mapArgs(
    [lookup({ n: "normal", i: "italic", o: "oblique" })],
    a => `font-style: ${a}`,
  ),
  Fv: mapArgs(
    [lookup({ n: "normal", sc: "small-caps" })],
    a => `font-variant: ${a}`,
  ),
  H: mapArgs(
    [
      lookup({
        0: "0",
        a: "auto",
        av: "available",
        bb: "border-box",
        cb: "content-box",
        fc: "fit-content",
        maxc: "max-content",
        minc: "min-content",
      }),
    ],
    a => `height: ${a}`,
  ),
  Hy: mapArgs(
    [lookup({ a: "auto", n: "normal", m: "manual" })],
    a => `hyphens: ${a}`,
  ),
  Lts: mapArgs([lookup({ n: "normal" })], a => `letter-spacing: ${a}`),
  List: mapArgs(
    [
      lookup({
        n: "none",
        d: "disc",
        c: "circle",
        s: "square",
        dc: "decimal",
        dclz: "decimal-leading-zero",
        lr: "lower-roman",
        lg: "lower-greek",
        ll: "lower-latin",
        ur: "upper-roman",
        ul: "upper-latin",
        a: "armenian",
        g: "georgian",
        la: "lower-alpha",
        ua: "upper-alpha",
      }),
    ],
    a => `list-style-type: ${a}`,
  ),
  Lisp: mapArgs(
    [lookup({ i: "inside", o: "outside" })],
    a => `list-style-position: ${a}`,
  ),
  Lisi: mapArgs([lookup({ n: "none" })], a => `list-style-image: ${a}`),
  Lh: mapArgs([lookup({ n: "normal" })], a => `line-height: ${a}`),
  M: mapArgs([lookup({ 0: "0", a: "auto" })], a => `margin: ${a}`),
  Mx: mapArgs(
    [lookup({ 0: "0", a: "auto" })],
    a => `margin-__START__: ${a}; margin-__END__: ${a}`,
  ),
  My: mapArgs(
    [lookup({ 0: "0", a: "auto" })],
    a => `margin-top: ${a}; margin-bottom: ${a}`,
  ),
  Mt: mapArgs([lookup({ 0: "0", a: "auto" })], a => `margin-top: ${a}`),
  Mend: mapArgs([lookup({ 0: "0", a: "auto" })], a => `margin-__END__: ${a}`),
  Mb: mapArgs([lookup({ 0: "0", a: "auto" })], a => `margin-bottom: ${a}`),
  Mstart: mapArgs(
    [lookup({ 0: "0", a: "auto" })],
    a => `margin-__START__: ${a}`,
  ),
  Mah: mapArgs(
    [
      lookup({
        a: "auto",
        maxc: "max-content",
        minc: "min-content",
        fa: "fill-available",
        fc: "fit-content",
      }),
    ],
    a => `max-height: ${a}`,
  ),
  Maw: mapArgs(
    [
      lookup({
        n: "none",
        fa: "fill-available",
        fc: "fit-content",
        maxc: "max-content",
        minc: "min-content",
      }),
    ],
    a => `max-width: ${a}`,
  ),
  Mih: mapArgs(
    [
      lookup({
        a: "auto",
        fa: "fill-available",
        fc: "fit-content",
        maxc: "max-content",
        minc: "min-content",
      }),
    ],
    a => `min-height: ${a}`,
  ),
  Miw: mapArgs(
    [
      lookup({
        a: "auto",
        fa: "fill-available",
        fc: "fit-content",
        ini: "initial",
        maxc: "max-content",
        minc: "min-content",
      }),
    ],
    a => `min-width: ${a}`,
  ),
  Objf: mapArgs(
    [
      lookup({
        ct: "contain",
        cv: "cover",
        f: "fill",
        n: "none",
        sd: "scale-down",
      }),
    ],
    a => `object-fit: ${a}`,
  ),
  O: mapArgs([lookup({ 0: "0", n: "none" })], a => `outline: ${a}`),
  T: mapArgs([lookup({ a: "auto" })], a => `top: ${a}`),
  End: mapArgs([lookup({ a: "auto" })], a => `__END__: ${a}`),
  B: mapArgs([lookup({ a: "auto" })], a => `bottom: ${a}`),
  Start: mapArgs([lookup({ a: "auto" })], a => `__START__: ${a}`),
  Op: mapArgs([lookup({ 0: "0", 1: "1" })], a => `opacity: ${a}`),
  Ov: mapArgs(
    [lookup({ a: "auto", h: "hidden", s: "scroll", v: "visible" })],
    a => `overflow: ${a}`,
  ),
  Ovx: mapArgs(
    [lookup({ a: "auto", h: "hidden", s: "scroll", v: "visible" })],
    a => `overflow-x: ${a}`,
  ),
  Ovy: mapArgs(
    [lookup({ a: "auto", h: "hidden", s: "scroll", v: "visible" })],
    a => `overflow-y: ${a}`,
  ),
  Ovs: mapArgs(
    [lookup({ a: "auto", touch: "touch" })],
    a => `-webkit-overflow-scrolling: ${a}`,
  ),
  P: a => `padding: ${a}`,
  Px: a => `padding-__START__: ${a}; padding-__END__: ${a}`,
  Py: a => `padding-top: ${a}; padding-bottom: ${a}`,
  Pt: a => `padding-top: ${a}`,
  Pend: a => `padding-__END__: ${a}`,
  Pb: a => `padding-bottom: ${a}`,
  Pstart: a => `padding-__START__: ${a}`,
  Pe: mapArgs(
    [
      lookup({
        a: "auto",
        all: "all",
        f: "fill",
        n: "none",
        p: "painted",
        s: "stroke",
        v: "visible",
        vf: "visibleFill",
        vp: "visiblePainted",
        vs: "visibleStroke",
      }),
    ],
    a => `pointer-events: ${a}`,
  ),
  Pos: mapArgs(
    [
      lookup({
        a: "absolute",
        f: "fixed",
        r: "relative",
        s: "static",
        st: "sticky",
      }),
    ],
    a => `position: ${a}`,
  ),
  Rsz: mapArgs(
    [lookup({ n: "none", b: "both", h: "horizontal", v: "vertical" })],
    a => `resize: ${a}`,
  ),
  Tbl: mapArgs([lookup({ a: "auto", f: "fixed" })], a => `table-layout: ${a}`),
  Ta: mapArgs(
    [
      lookup({
        c: "center",
        e: "end",
        end: "__END__",
        j: "justify",
        mp: "match-parent",
        s: "start",
        start: "__START__",
      }),
    ],
    a => `text-align: ${a}`,
  ),
  Tal: mapArgs(
    [
      lookup({
        a: "auto",
        c: "center",
        e: "end",
        end: "__END__",
        j: "justify",
        s: "start",
        start: "__START__",
      }),
    ],
    a => `text-align-last: ${a}`,
  ),
  Td: mapArgs(
    [lookup({ lt: "line-through", n: "none", o: "overline", u: "underline" })],
    a => `text-decoration: ${a}`,
  ),
  Ti: a => `text-indent: ${a}`,
  Tov: mapArgs(
    [lookup({ c: "clip", e: "ellipsis" })],
    a => `text-overflow: ${a}`,
  ),
  Tren: mapArgs(
    [
      lookup({
        a: "auto",
        os: "optimizeSpeed",
        ol: "optimizeLegibility",
        gp: "geometricPrecision",
      }),
    ],
    a => `text-rendering: ${a}`,
  ),
  Tr: mapArgs([lookup({ n: "none" })], a => `text-replace: ${a}`),
  Tt: mapArgs(
    [lookup({ n: "none", c: "capitalize", u: "uppercase", l: "lowercase" })],
    a => `text-transform: ${a}`,
  ),
  Tsh: mapArgs([lookup({ n: "none" })], a => `text-shadow: ${a}`),
  Trf: a => `transform: ${a}`,
  Trfo: mapArgs(
    [
      lookup({
        t: "top",
        end: "__END__",
        bottom: "bottom",
        start: "__START__",
        c: "center",
      }),
      lookup({
        t: "top",
        end: "__END__",
        bottom: "bottom",
        start: "__START__",
        c: "center",
      }),
    ],
    (a, b) => `transform-origin: ${a} ${b}`,
  ),
  Trfs: mapArgs(
    [lookup({ f: "flat", p: "preserve-3d" })],
    a => `transform-style: ${a}`,
  ),
  Prs: mapArgs([lookup({ n: "none" })], a => `perspective: ${a}`),
  Prso: mapArgs(
    [
      lookup({
        t: "top",
        end: "__END__",
        bottom: "bottom",
        start: "__START__",
        c: "center",
      }),
      lookup({
        t: "top",
        end: "__END__",
        bottom: "bottom",
        start: "__START__",
        c: "center",
      }),
    ],
    (a, b) => `perspective-origin: ${a} ${b}`,
  ),
  Bfv: mapArgs(
    [lookup({ h: "hidden", v: "visible" })],
    a => `backface-visibility: ${a}`,
  ),
  Matrix: a => `transform: matrix(${a})`,
  Matrix3d: a => `transform: matrix(${a})`,
  Rotate: a => `transform: rotate(${a})`,
  Rotate3d: (a, b, c, d) => `transform: rotate3d(${a},${b},${c},${d})`,
  RotateX: a => `transform: rotateX(${a})`,
  RotateY: a => `transform: rotateY(${a})`,
  RotateZ: a => `transform: rotateZ(${a})`,
  Scale: (a, b) => `transform: scale(${a},${b})`,
  Scale3d: (a, b, c) => `transform: scale3d(${a},${b},${c})`,
  ScaleX: a => `transform: scaleX(${a})`,
  ScaleY: a => `transform: scaleY(${a})`,
  Skew: (a, b) => `transform: skew(${a},${b})`,
  SkewX: a => `transform: skewX(${a})`,
  SkewY: a => `transform: skewY(${a})`,
  Translate: (a, b) => `transform: translate(${a},${b})`,
  Translate3d: (a, b, c) => `transform: translate3d(${a},${b},${c})`,
  TranslateX: a => `transform: translateX(${a})`,
  TranslateY: a => `transform: translateY(${a})`,
  TranslateZ: a => `transform: translateZ(${a})`,
  Trs: a => `transition: ${a}`,
  Trsde: mapArgs([lookup({ i: "initial" })], a => `transition-delay: ${a}`),
  Trsdu: a => `transition-duration: ${a}`,
  Trsp: mapArgs([lookup({ a: "all" })], a => `transition-property: ${a}`),
  Trstf: mapArgs(
    [
      lookup({
        e: "ease",
        ei: "ease-in",
        eo: "ease-out",
        eio: "ease-in-out",
        l: "linear",
        ss: "step-start",
        se: "step-end",
      }),
    ],
    a => `transition-timing-function: ${a}`,
  ),
  Us: mapArgs(
    [
      lookup({
        a: "all",
        el: "element",
        els: "elements",
        n: "none",
        t: "text",
        to: "toggle",
      }),
    ],
    a => `user-select: ${a}`,
  ),
  Va: mapArgs(
    [
      lookup({
        b: "bottom",
        bl: "baseline",
        m: "middle",
        sub: "sub",
        sup: "super",
        t: "top",
        tb: "text-bottom",
        tt: "text-top",
      }),
    ],
    a => `vertical-align: ${a}`,
  ),
  V: mapArgs(
    [lookup({ v: "visible", h: "hidden", c: "collapse" })],
    a => `visibility: ${a}`,
  ),
  Whs: mapArgs(
    [
      lookup({
        n: "normal",
        p: "pre",
        nw: "nowrap",
        pw: "pre-wrap",
        pl: "pre-line",
      }),
    ],
    a => `white-space: ${a}`,
  ),
  Whsc: mapArgs(
    [
      lookup({
        n: "normal",
        ka: "keep-all",
        l: "loose",
        bs: "break-strict",
        ba: "break-all",
      }),
    ],
    a => `white-space-collapse: ${a}`,
  ),
  W: mapArgs(
    [
      lookup({
        0: "0",
        a: "auto",
        bb: "border-box",
        cb: "content-box",
        av: "available",
        minc: "min-content",
        maxc: "max-content",
        fc: "fit-content",
      }),
    ],
    a => `width: ${a}`,
  ),
  Wob: mapArgs(
    [lookup({ ba: "break-all", ka: "keep-all", n: "normal" })],
    a => `word-break: ${a}`,
  ),
  Wow: mapArgs(
    [lookup({ bw: "break-word", n: "normal" })],
    a => `word-wrap: ${a}`,
  ),
  Z: mapArgs([lookup({ a: "auto" })], a => `z-index: ${a}`),
  Fill: mapArgs([color], a => `fill: ${a}`),
  Stk: mapArgs([color], a => `stroke: ${a}`),
  Stkw: mapArgs([lookup({ i: "inherit" })], a => `stroke-width: ${a}`),
  Stklc: mapArgs(
    [lookup({ i: "inherit", b: "butt", r: "round", s: "square" })],
    a => `stroke-linecap: ${a}`,
  ),
  Stklj: mapArgs(
    [lookup({ i: "inherit", b: "bevel", r: "round", m: "miter" })],
    a => `stroke-linejoin: ${a}`,
  ),
};
